{"ast":null,"code":"// Mock fallback data\nconst MOCK_SERVICES = [{\n  id: 1,\n  name: 'Массаж',\n  description: 'Релакс массаж спины',\n  price: 2000,\n  date: '2025-04-01',\n  imageUrl: ''\n}, {\n  id: 2,\n  name: 'Спа',\n  description: 'Спа-процедуры для лица',\n  price: 4500,\n  date: '2025-04-05',\n  imageUrl: 'https://picsum.photos/id/1018/300/200'\n}];\nexport const fetchServices = async (name = '', minPrice = 0, maxPrice = Infinity, fromDate = '', toDate = '') => {\n  try {\n    const params = new URLSearchParams();\n    if (name) params.append('name', name);\n    if (minPrice) params.append('minPrice', minPrice.toString());\n    if (maxPrice < Infinity) params.append('maxPrice', maxPrice.toString());\n    if (fromDate) params.append('fromDate', fromDate);\n    if (toDate) params.append('toDate', toDate);\n    const response = await fetch(`/api/services?${params}`);\n    if (!response.ok) throw new Error('Ошибка загрузки услуг');\n    return await response.json();\n  } catch (error) {\n    console.warn('Using mock data due to error:', error);\n    return MOCK_SERVICES;\n  }\n};","map":{"version":3,"names":["MOCK_SERVICES","id","name","description","price","date","imageUrl","fetchServices","minPrice","maxPrice","Infinity","fromDate","toDate","params","URLSearchParams","append","toString","response","fetch","ok","Error","json","error","console","warn"],"sources":["C:/Users/Akram/Desktop/New folder/lab6F/lab6F/guest-app/src/utils/api.ts"],"sourcesContent":["import { Service } from '../types';\r\n\r\n// Mock fallback data\r\nconst MOCK_SERVICES: Service[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Массаж',\r\n    description: 'Релакс массаж спины',\r\n    price: 2000,\r\n    date: '2025-04-01',\r\n    imageUrl: ''\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Спа',\r\n    description: 'Спа-процедуры для лица',\r\n    price: 4500,\r\n    date: '2025-04-05',\r\n    imageUrl: 'https://picsum.photos/id/1018/300/200' \r\n  }\r\n];\r\n\r\nexport const fetchServices = async (\r\n  name: string = '',\r\n  minPrice: number = 0,\r\n  maxPrice: number = Infinity,\r\n  fromDate: string = '',\r\n  toDate: string = ''\r\n): Promise<Service[]> => {\r\n  try {\r\n    const params = new URLSearchParams();\r\n    if (name) params.append('name', name);\r\n    if (minPrice) params.append('minPrice', minPrice.toString());\r\n    if (maxPrice < Infinity) params.append('maxPrice', maxPrice.toString());\r\n    if (fromDate) params.append('fromDate', fromDate);\r\n    if (toDate) params.append('toDate', toDate);\r\n\r\n    const response = await fetch(`/api/services?${params}`);\r\n    if (!response.ok) throw new Error('Ошибка загрузки услуг');\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.warn('Using mock data due to error:', error);\r\n    return MOCK_SERVICES;\r\n  }\r\n};\r\n"],"mappings":"AAEA;AACA,MAAMA,aAAwB,GAAG,CAC/B;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,QAAQ;EACdC,WAAW,EAAE,qBAAqB;EAClCC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,KAAK;EACXC,WAAW,EAAE,wBAAwB;EACrCC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAC3BL,IAAY,GAAG,EAAE,EACjBM,QAAgB,GAAG,CAAC,EACpBC,QAAgB,GAAGC,QAAQ,EAC3BC,QAAgB,GAAG,EAAE,EACrBC,MAAc,GAAG,EAAE,KACI;EACvB,IAAI;IACF,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpC,IAAIZ,IAAI,EAAEW,MAAM,CAACE,MAAM,CAAC,MAAM,EAAEb,IAAI,CAAC;IACrC,IAAIM,QAAQ,EAAEK,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEP,QAAQ,CAACQ,QAAQ,CAAC,CAAC,CAAC;IAC5D,IAAIP,QAAQ,GAAGC,QAAQ,EAAEG,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEN,QAAQ,CAACO,QAAQ,CAAC,CAAC,CAAC;IACvE,IAAIL,QAAQ,EAAEE,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;IACjD,IAAIC,MAAM,EAAEC,MAAM,CAACE,MAAM,CAAC,QAAQ,EAAEH,MAAM,CAAC;IAE3C,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiBL,MAAM,EAAE,CAAC;IACvD,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1D,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,IAAI,CAAC,+BAA+B,EAAEF,KAAK,CAAC;IACpD,OAAOtB,aAAa;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}